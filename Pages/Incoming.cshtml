@page "/incoming/{channelId}/{owner}/{repo}"
@model IncomingModel

<div class="card-deck">
    @{
        var index = 0;
    }
    @foreach (var incoming in Model.IncomingRepositories.OrderBy(r => r.ShortName))
    {
        // We compute the "condition" of a dependency by first checking how old the build we have is.
        // If it's older than we'd like, we then ALSO check the number of commits that we're missing
        // If it's old but there are few commits, it's OK, there just hasn't been churn
        // If it's old and there are lots of commits, ruh-roh!

        string conditionClass;
        string textClass = "text-white";
        string linkClass = "link-light";
        string statusIcon = "✔️";

        var elapsed = (incoming.CommitAge == null ? TimeSpan.FromDays(100) : DateTime.UtcNow - incoming.CommitAge.Value.UtcDateTime);
        if (incoming.CommitDistance == 0 || elapsed.TotalDays < 5)
        {
            conditionClass = "bg-primary";
        }
        else if (elapsed.TotalDays < 7)
        {
            statusIcon = "⚠";
            conditionClass = "bg-warning";
            textClass = null;
            linkClass = null;
        }
        else
        {
            statusIcon = "❌";
            conditionClass = "bg-danger";
        }

        <div class="card @textClass @conditionClass m-1">
            <div class="card-header">@incoming.ShortName</div>
            <div class="card-body">
                <h5 class="card-title">
                    @statusIcon We are @(incoming.CommitDistance == null ? "(unknown)" : incoming.CommitDistance == 0 ? "0" : $"{incoming.CommitDistance}") commit(s) behind
                </h5>
                <p class="card-text">
                    Oldest unconsumed commit was @(incoming.CommitAge == null ? "(unknown)" : incoming.CommitAge.Humanize())
                </p>
            </div>
            <div class="card-footer">
                <a class="@linkClass" target="_blank" href="@incoming.BuildUrl">Build @incoming.Build.AzureDevOpsBuildNumber</a> | <a class="@linkClass" target="_blank" href="@incoming.CommitUrl">@incoming.Build.Commit.Substring(0, 6)</a>
            </div>
        </div>

        index += 1;
        if(index % 3 == 0)
        {
            // Wrap every 3 cards
            <div class="w-100"></div>
        }
    }
</div>

<small>Rate Limit Remaining: @Model.CurrentRateLimit.Remaining (Resets @Model.CurrentRateLimit.Reset.Humanize())</small>

@functions
{
    string DisplayFor(string repository)
    {
        return repository.Substring("https://github.com/".Length);
    }
}
